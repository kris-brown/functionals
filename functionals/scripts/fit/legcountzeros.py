import numpy as np
from typing import List as L


def countpositiveroots(coeff: np.ndarray) -> int:
    roots = np.roots(coeff)
    realroots = roots[np.abs(np.imag(roots)) < 1e-13]
    # print(realroots[realroots>0.])
    return len(realroots[realroots > 0.])


def countzeros(c: np.ndarray) -> L[int]:
    coeffs = (
        [c[7] + c[0] + c[1] + c[2] + c[3] + c[4] + c[5] + c[6], 0, -0.319107600000000000000000000000e3 * c[7] + 0.455868000000000000000000000000e2 * c[0] + 0.325620000000000000000000000000e2 * c[1] + 0.651240000000000000000000000000e1 * c[2] - 0.325620000000000000000000000000e2 * c[3] - 0.846612000000000000000000000000e2 * c[4] - 0.149785200000000000000000000000e3 * c[5] - 0.227934000000000000000000000000e3 * c[6], 0, 0.187034070081600000000000000000e5 * c[7] + 0.890638428960000000000000000000e3 * c[0] + 0.381702183840000000000000000000e3 * c[1] - 0.381702183840000000000000000000e3 * c[2] - 0.890638428960000000000000000000e3 * c[3] - 0.381702183840000000000000000000e3 * c[4] + 0.216297904176000000000000000000e4 * c[5] + 0.801574586064000000000000000000e4 * c[6], 0, -0.338344632777614400000000000000e6 * c[7] + 0.966698950793184000000000000000e4 * c[0] + 0.138099850113312000000000000000e4 * c[1] - 0.690499250566560000000000000000e4 * c[2] - 0.414299550339936000000000000000e4 * c[3] + 0.124289865101980800000000000000e5 * c[4] + 0.207149775169968000000000000000e5 * c[5] - 0.483349475396592000000000000000e5 * c[6], 0, 0.220343558650093601856000000000e7 * c[7] + 0.629553024714553148160000000000e5 * c[0] - 0.899361463877933068800000000000e4 * c[1] -
            0.449680731938966534400000000000e5 * c[2] + 0.269808439163379920640000000000e5 * c[3] + 0.809425317490139761920000000000e5 * c[4] - 0.134904219581689960320000000000e6 * c[5] - 0.314776512357276574080000000000e6 * c[6], 0, -0.516587540887033046181725184000e7 * c[7] + 0.245994067089063355324631040000e6 * c[0] - 0.105426028752455723710556160000e6 * c[1] - 0.105426028752455723710556160000e6 * c[2] + 0.245994067089063355324631040000e6 * c[3] - 0.105426028752455723710556160000e6 * c[4] - 0.597414162930582434359818240000e6 * c[5] + 0.221394660380157019792167936000e7 * c[6], 0, 0.373802744585857112217096343142e7 * c[7] + 0.534003920836938731738709061632e6 * c[0] - 0.381431372026384808384792186880e6 * c[1] + 0.762862744052769616769584373760e5 * c[2] + 0.381431372026384808384792186880e6 * c[3] - 0.991721567268600501800459685888e6 * c[4] + 0.175458431132137011857004405965e7 * c[5] - 0.267001960418469365869354530816e7 * c[6], 0, -0.496806733436925685225024127567e6 * c[7] + 0.496806733436925685225024127567e6 * c[0] - 0.496806733436925685225024127567e6 * c[1] + 0.496806733436925685225024127567e6 * c[2] - 0.496806733436925685225024127567e6 * c[3] + 0.496806733436925685225024127567e6 * c[4] - 0.496806733436925685225024127567e6 * c[5] + 0.496806733436925685225024127567e6 * c[6]],
        [0.729388800000000000000000000000e3 * c[7] + 0.260496000000000000000000000000e2 * c[1] + 0.781488000000000000000000000000e2 * c[2] + 0.156297600000000000000000000000e3 * c[3] + 0.260496000000000000000000000000e3 * c[4] + 0.390744000000000000000000000000e3 * c[5] + 0.547041600000000000000000000000e3 * c[6], 0, -0.997515040435200000000000000000e5 * c[7] + 0.101787249024000000000000000000e4 * c[1] + 0.203574498048000000000000000000e4 * c[2] + 0.101787249024000000000000000000e4 * c[3] - 0.508936245120000000000000000000e4 * c[4] - 0.203574498048000000000000000000e5 * c[5] - 0.498757520217600000000000000000e5 * c[6], 0, 0.324810847466509824000000000000e7 * c[7] + 0.165719820135974400000000000000e5 * c[1] + 0.165719820135974400000000000000e5 * c[2] - 0.331439640271948800000000000000e5 * c[3] - 0.994318920815846400000000000000e5 * c[4] + 0.165719820135974400000000000000e5 * c[5] + 0.812027118666274560000000000000e6 * c[6], 0, -0.352549693840149762969600000000e8 * c[7] + 0.143897834220469291008000000000e6 * c[1] -
            0.431693502661407873024000000000e6 * c[3] + 0.215846751330703936512000000000e7 * c[5], 0, 0.137756677569875478981793382400e9 * c[7] + 0.702840191683038158070374400000e6 * c[1] - 0.702840191683038158070374400000e6 * c[2] - 0.140568038336607631614074880000e7 * c[3] + 0.421704115009822894842224640000e7 * c[4] + 0.702840191683038158070374400000e6 * c[5] - 0.344391693924688697454483456000e8 * c[6], 0, -0.179425317401211413864206244708e9 * c[7] + 0.183087058572664708024700249702e7 * c[1] - 0.366174117145329416049400499405e7 * c[2] + 0.183087058572664708024700249702e7 * c[3] + 0.915435292863323540123501248512e7 * c[4] - 0.366174117145329416049400499405e8 * c[5] + 0.897126587006057069321031223542e8 * c[6], 0, 0.198722693374770274090009651027e7 * c[1] - 0.596168080124310822270028953081e7 * c[2] + 0.119233616024862164454005790616e8 * c[3] - 0.198722693374770274090009651027e8 * c[4] + 0.298084040062155411135014476540e8 * c[5] - 0.417317656087017575589020267157e8 * c[6] + 0.556423541449356767452027022876e8 * c[7], 0],
        [-0.218816640000000000000000000000e4 * c[7] - 0.781488000000000000000000000000e2 * c[1] - 0.234446400000000000000000000000e3 * c[2] - 0.468892800000000000000000000000e3 * c[3] - 0.781488000000000000000000000000e3 * c[4] - 0.117223200000000000000000000000e4 * c[5] - 0.164112480000000000000000000000e4 * c[6], 0, 0.560508451292160000000000000000e6 * c[7] - 0.288397205568000000000000000000e4 * c[1] - 0.356255371584000000000000000000e4 * c[2] + 0.814297992192000000000000000000e4 * c[3] + 0.475007162112000000000000000000e5 * c[4] + 0.134868104956800000000000000000e6 * c[5] + 0.295691958414720000000000000000e6 * c[6], 0, -0.298825979669189038080000000000e8 * c[7] - 0.430871532353533440000000000000e5 * c[1] + 0.298295676244753920000000000000e5 * c[2] + 0.304924469050192896000000000000e6 * c[3] + 0.331439640271948800000000000000e6 * c[4] - 0.157433829129175680000000000000e7 * c[5] - 0.925710915279552998400000000000e7 * c[6], 0, 0.507671559129815658676224000000e9 * c[7] - 0.323770126996055904768000000000e6 * c[1] + 0.971310380988167714304000000000e6 * c[2] + 0.194262076197633542860800000000e7 * c[3] - 0.582786228592900628582400000000e7 * c[4] - 0.184548972387751865717760000000e8 * c[5] + 0.475942086684202180008960000000e8 * c[6], 0, -
            0.312248469158384419025398333440e10 * c[7] - 0.117140031947173026345062400000e7 * c[1] + 0.773124210851341973877411840000e7 * c[2] - 0.421704115009822894842224640000e7 * c[3] - 0.463874526510805184326447104000e8 * c[4] + 0.906663847271119223910782976000e8 * c[5] + 0.378830863317157567199931801600e9 * c[6], 0, 0.681816206124603372683983729892e10 * c[7] - 0.915435292863323540123501248512e6 * c[1] + 0.247167529073097355833345337098e8 * c[2] - 0.695730822576125890493860948869e8 * c[3] + 0.183087058572664708024700249702e8 * c[4] + 0.498912234610511329367308180439e9 * c[5] - 0.228767279686544552676862962003e10 * c[6], 0, -0.434010362330498278612581077843e10 * c[7] + 0.596168080124310822270028953081e7 * c[1] + 0.178850424037293246681008685924e8 * c[2] - 0.143080339229834597344806948739e9 * c[3] + 0.476934464099448657816023162465e9 * c[4] - 0.116252775624240610342655645851e10 * c[5] + 0.237871063969600018085741552279e10 * c[6], 0, 0.129416166833385393298377885135e8 * c[1] - 0.388248500500156179895133655404e8 * c[2] + 0.776497001000312359790267310809e8 * c[3] - 0.129416166833385393298377885135e9 * c[4] + 0.194124250250078089947566827702e9 * c[5] - 0.271773950350109325926593558783e9 * c[6] + 0.362365267133479101235458078377e9 * c[7]],
        [0.875266560000000000000000000000e4 * c[7] + 0.312595200000000000000000000000e3 * c[1] + 0.937785600000000000000000000000e3 * c[2] + 0.187557120000000000000000000000e4 * c[3] + 0.312595200000000000000000000000e4 * c[4] + 0.468892800000000000000000000000e4 * c[5] + 0.656449920000000000000000000000e4 * c[6], 0, -0.356255371584000000000000000000e7 * c[7] + 0.101787249024000000000000000000e5 * c[1] - 0.916085241216000000000000000000e5 * c[3] - 0.356255371584000000000000000000e6 * c[4] - 0.916085241216000000000000000000e6 * c[5] - 0.192377900655360000000000000000e7 * c[6], 0, 0.282863846593691983872000000000e9 * c[7] + 0.119318270497901568000000000000e6 * c[1] - 0.517045838824240128000000000000e6 * c[2] - 0.180303164307940147200000000000e7 * c[3] + 0.106060684887023616000000000000e7 * c[4] + 0.231344868909820262400000000000e8 * c[5] + 0.971648449421245102080000000000e8 * c[6], 0, -0.702278990129578327835443200000e10 * c[7] + 0.431693502661407873024000000000e6 * c[1] - 0.777048304790534171443200000000e7 * c[2] + 0.431693502661407873024000000000e6 * c[3] + 0.798632979923604565094400000000e8 * c[4] + 0.820217655056674958745600000000e8 * c[5] - 0.107880206315085827468697600000e10 * c[6], 0, -0.421704115009822894842224640000e8 *
            c[2] + 0.253022469005893736905334784000e9 * c[4] - 0.206635016354813218472690073600e10 * c[6] + 0.639190983924222222475521294336e11 * c[7] - 0.281136076673215263228149760000e7 * c[1] + 0.151813481403536242143200870400e9 * c[3] - 0.204948199894773926893321175040e10 * c[5], 0, -0.217463484690268233603417968587e12 * c[7] - 0.329556705430796474444460449464e8 * c[1] - 0.439408940574395299259280599286e8 * c[2] + 0.809244798891178009469175103685e9 * c[3] - 0.206888376187111120067911282164e10 * c[4] - 0.344203670116609651086436469441e10 * c[5] + 0.468300078417161790185578298689e11 * c[6], 0, 0.247052052403514404748699998157e12 * c[7] - 0.119233616024862164454005790616e9 * c[1] + 0.357700848074586493362017371849e9 * c[2] + 0.476934464099448657816023162465e9 * c[3] - 0.715401696149172986724034743697e10 * c[4] + 0.315969082465884735803115345133e11 * c[5] - 0.976523315243621126878307425147e11 * c[6], 0, -0.155299400200062471958053462162e9 * c[1] + 0.931796401200374831748320772971e9 * c[2] - 0.326128740420131191111912270540e10 * c[3] + 0.854146701100343595769294041890e10 * c[4] - 0.186359280240074966349664154594e11 * c[5] + 0.358741614462144310223103497594e11 * c[6] - 0.630515564812253636149697056377e11 * c[7], 0],
        [-0.156297600000000000000000000000e4 * c[1] - 0.468892800000000000000000000000e4 * c[2] - 0.937785600000000000000000000000e4 * c[3] - 0.156297600000000000000000000000e5 * c[4] - 0.234446400000000000000000000000e5 * c[5] - 0.328224960000000000000000000000e5 * c[6] - 0.437633280000000000000000000000e5 * c[7], 0, 0.257928889026816000000000000000e8 * c[7] - 0.407148996096000000000000000000e5 * c[1] + 0.916085241216000000000000000000e5 * c[2] + 0.824476717094400000000000000000e6 * c[3] + 0.279914934816000000000000000000e7 * c[4] + 0.687063930912000000000000000000e7 * c[5] + 0.141077127147264000000000000000e8 * c[6], 0, -0.284738469199070126284800000000e10 * c[7] - 0.212121369774047232000000000000e6 * c[1] + 0.465341254941816115200000000000e7 * c[2] + 0.847159720535101132800000000000e7 * c[3] - 0.397064689045794662400000000000e8 * c[4] - 0.285767257842474255360000000000e9 * c[5] - 0.103735304370875623219200000000e10 * c[6], 0, 0.975140365743779724953468928000e11 * c[7] + 0.379890282342038928261120000000e7 * c[1] + 0.484360109986099633532928000000e8 * c[2] - 0.133911324525568722212044800000e9 * c[3] - 0.802518221447557235951616000000e9 * c[4] + 0.755031936154802369918976000000e9 * c[5] + 0.188273623928714492846211072000e11 * c[6], 0, -0.124256523168027682041577630925e13 * c[7] + 0.618499368681073579101929472000e8 * c[1] + 0.927749053021610368652894208000e8 * c[2] - 0.194827301134538177417107783680e10 *
            c[3] + 0.139162357953241555297934131200e10 * c[4] + 0.314506928974325914973331136512e11 * c[5] - 0.363677628784471264511934529536e11 * c[6], 0, 0.617581942494969686520597894286e13 * c[7] + 0.366174117145329416049400499405e9 * c[1] - 0.126330070415138648537043172295e10 * c[2] - 0.521798116932094417870395711652e10 * c[3] + 0.425677411181445446157428080558e11 * c[4] - 0.417987754721393528420390670071e11 * c[5] - 0.796648409261378677557075726505e12 * c[6], 0, -0.112809308793442591033223958618e14 * c[7] + 0.953868928198897315632046324930e9 * c[1] - 0.751171780956631636060236480882e10 * c[2] + 0.182427432518039111614628859643e11 * c[3] + 0.542512952913122848265726347304e11 * c[4] - 0.649227039255374485452061529905e12 * c[5] + 0.318496835125611813689540267894e13 * c[6], 0, 0.602468493136122353714072601110e13 * c[7] + 0.621197600800249887832213848647e9 * c[1] - 0.107156586138043105651056888892e11 * c[2] + 0.712824246918286746287465391323e11 * c[3] - 0.302057333389121507958413983905e12 * c[4] + 0.971397748251390762097624405822e12 * c[5] - 0.258946219893584165742858342809e13 * c[6], 0, -0.101137181386288684237962736698e10 * c[1] + 0.606823088317732105427776420189e10 * c[2] - 0.212388080911206236899721747066e11 * c[3] + 0.556254497624587763308795051840e11 * c[4] - 0.121364617663546421085555284038e12 * c[5] + 0.233626889002326860589693921773e12 * c[6] - 0.410616956428332058006128710995e12 * c[7]],
        [0.937785600000000000000000000000e4 * c[1] + 0.281335680000000000000000000000e5 * c[2] + 0.562671360000000000000000000000e5 * c[3] + 0.937785600000000000000000000000e5 * c[4] + 0.140667840000000000000000000000e6 * c[5] + 0.196934976000000000000000000000e6 * c[6] + 0.262579968000000000000000000000e6 * c[7], 0, -0.210903179977728000000000000000e9 * c[7] + 0.162859598438400000000000000000e6 * c[1] - 0.122144698828800000000000000000e7 * c[2] - 0.757297132738560000000000000000e7 * c[3] - 0.240217907696640000000000000000e8 * c[4] - 0.574080084495360000000000000000e8 * c[5] - 0.116281753285017600000000000000e9 * c[6], 0, 0.308254774555645437542400000000e11 * c[7] - 0.159091027330535424000000000000e7 * c[1] - 0.381818465593285017600000000000e8 * c[2] - 0.954546163983212544000000000000e7 * c[3] + 0.652273212055195238400000000000e9 * c[4] + 0.348409349853872578560000000000e10 * c[5] + 0.116597813930549412249600000000e11 * c[6], 0, -0.139268813570997858479421849600e13 * c[7] - 0.621638643832427337154560000000e8 * c[1] - 0.217573525341349568004096000000e9 * c[2] + 0.226898104998835978061414400000e10 * c[3] + 0.652720576024048704012288000000e10 * c[4] - 0.313927515135375805263052800000e11 * c[5] - 0.306996244256644240453779456000e12 * c[6], 0, 0.185549810604322073730578841600e10 * c[2] + 0.185549810604322073730578841600e11 * c[3] - 0.717459267670045351758238187520e11 * c[4] - 0.391139000753910931424060198093e12 *
            c[5] + 0.173526182877162003352837332664e13 * c[6] + 0.237464173613936665666078393762e14 * c[7] - 0.618499368681073579101929472000e9 * c[1], 0, -0.163549765317552227965501276177e15 * c[7] - 0.263645364344637179555568359571e10 * c[1] + 0.250463096127405320577789941593e11 * c[2] - 0.180157665635502072696305045707e11 * c[3] - 0.608581382695537489474103630011e12 * c[4] + 0.230733634695614971641048242685e13 * c[5] + 0.108516431964252663105071936800e14 * c[6], 0, 0.444373194366451099049607629117e15 * c[7] - 0.286160678459669194689613897479e10 * c[1] + 0.858482035379007584068841692437e11 * c[2] - 0.532258861934984702122681849311e12 * c[3] + 0.686785628303206067255073353949e12 * c[4] + 0.100528246342881788094461362184e14 * c[5] - 0.884579889254529414624534479887e14 * c[6], 0, -0.414357435661790682680721603463e15 * c[7] + 0.124239520160049977566442769729e11 * c[1] + 0.186359280240074966349664154594e11 * c[2] - 0.950432329224382328383287188430e12 * c[3] + 0.745437120960299865398656618377e13 * c[4] - 0.363400596468146184381845101459e14 * c[5] + 0.134756395541598208167442150187e15 * c[6], 0, 0.303411544158866052713888210095e11 * c[1] - 0.273070389742979447442499389085e12 * c[2] + 0.139569310313078384248388576644e13 * c[3] - 0.515799625070072289613609957161e13 * c[4] + 0.153222829800227356620513546098e14 * c[5] - 0.388670188067507413526490797131e14 * c[6] + 0.875038893354169696026853597913e14 * c[7], 0],
        [-0.656449920000000000000000000000e5 * c[1] - 0.196934976000000000000000000000e6 * c[2] - 0.393869952000000000000000000000e6 * c[3] - 0.656449920000000000000000000000e6 * c[4] - 0.984674880000000000000000000000e6 * c[5] - 0.137854483200000000000000000000e7 * c[6] - 0.183805977600000000000000000000e7 * c[7], 0, -0.427506445900800000000000000000e6 * c[1] + 0.141077127147264000000000000000e8 * c[2] + 0.743861215867392000000000000000e8 * c[3] + 0.226578416327424000000000000000e9 * c[4] + 0.532245525146496000000000000000e9 * c[5] + 0.106833860830609920000000000000e10 * c[6] + 0.192719905812080640000000000000e10 * c[7], 0, -0.359682540050514318704640000000e12 * c[7] + 0.334091157394124390400000000000e8 * c[1] + 0.300682041654711951360000000000e9 * c[2] - 0.634773199048836341760000000000e9 * c[3] - 0.952159798573254512640000000000e10 * c[4] - 0.439329871973273573376000000000e11 * c[5] - 0.139616694675004582748160000000e12 * c[6], 0, 0.207146676761907625540113039360e14 * c[7] + 0.673441864151796281917440000000e9 * c[1] - 0.404065118491077769150464000000e9 * c[2] - 0.303048838868308326862848000000e11 * c[3] - 0.296314420226790364043673600000e11 * c[4] + 0.703073306174475318321807360000e12 * c[5] + 0.497808225981007811593371648000e13 * c[6], 0, -0.455963424785879308390870144510e15 * c[7] + 0.482429507571237391699504988160e10 * c[1] - 0.434186556814113652529554489344e11 * c[2] - 0.115783081817096974007881197158e12 * c[3] + 0.154377442422795965343841596211e13 * c[4] + 0.361822130678428043774628741120e13 * c[5] - 0.480210331836409699697687265214e14 * c[6], 0,
            0.417216152621744890274891373338e16 * c[7] + 0.856847434120070833555597168607e10 * c[1] - 0.317033550624426208415570952385e12 * c[2] + 0.139380515950198188925043806093e13 * c[3] + 0.614073994452717430714844637502e13 * c[4] - 0.621500005548424711272326479630e14 * c[5] - 0.827714621359988425214706864875e14 * c[6], 0, -0.158988011345407607877602585300e17 * c[7] - 0.658169560457239147786111964201e11 * c[1] - 0.489334760166034322919239764689e12 * c[2] + 0.929163722958545875157176325114e13 * c[3] - 0.407922047144258437030044610856e14 * c[4] - 0.858195874700547914874152078539e14 * c[5] + 0.217539347765040521803044484863e16 * c[6], 0, 0.231711861038579850235484772920e17 * c[7] - 0.354082632456142436064361893729e12 * c[1] + 0.240403471509696706591066759426e13 * c[2] + 0.262766585138505702553026457978e13 * c[3] - 0.134178681772853975771758191308e15 * c[4] + 0.109048132832479866559505980061e16 * c[5] - 0.571025334176416105141669432733e16 * c[6], 0, -0.101079735467261272265315573864e17 * c[7] - 0.455117316238299079070832315142e12 * c[1] + 0.664471281707916655443415180107e13 * c[2] - 0.506697278745306308032193310858e14 * c[3] + 0.264271454962372331913796630992e15 * c[4] - 0.106239552187226948357767956765e16 * c[5] + 0.352670408353057956371987961004e16 * c[6], 0, 0.197593734018019928169392557942e12 * c[1] - 0.177834360616217935352453302148e13 * c[2] + 0.908931176482891669579205766534e13 * c[3] - 0.335909347830633877887967348502e14 * c[4] + 0.997848356791000637255432417607e14 * c[5] - 0.253117573277083527984991866724e15 * c[6] + 0.569860328907969472840528137105e15 * c[7]],
        [0.525159936000000000000000000000e6 * c[1] + 0.157547980800000000000000000000e7 * c[2] + 0.315095961600000000000000000000e7 * c[3] + 0.525159936000000000000000000000e7 * c[4] + 0.787739904000000000000000000000e7 * c[5] + 0.110283586560000000000000000000e8 * c[6] + 0.147044782080000000000000000000e8 * c[7], 0, -0.342005156720640000000000000000e7 * c[1] - 0.164162475225907200000000000000e9 * c[2] - 0.790031912024678400000000000000e9 * c[3] - 0.234273532353638400000000000000e10 * c[4] - 0.543788199185817600000000000000e10 * c[5] - 0.108449835196114944000000000000e11 * c[6] - 0.194874538299420672000000000000e11 * c[7], 0, 0.451700153894386685804544000000e13 * c[7] - 0.445454876525499187200000000000e9 * c[1] - 0.213818340732239609856000000000e10 * c[2] + 0.153681932401297219584000000000e11 * c[3] + 0.137868284284641998438400000000e12 * c[4] + 0.582654978495352936857600000000e12 * c[5] + 0.178671950974377723985920000000e13 * c[6], 0, -0.322798899500220248044007620608e15 * c[7] - 0.638215674334625399478681600000e10 * c[1] + 0.330711758518851343366225920000e11 * c[2] + 0.366393816674832672518897664000e12 * c[3] - 0.453278177794478266675200000000e12 * c[4] - 0.138485548879769000034607104000e14 * c[5] - 0.824225083109620914487196712960e14 * c[6], 0, 0.891424121786716559893484090119e16 * c[7] - 0.245600476581720853956111630336e11 * c[1] + 0.663121286770646305681501401907e12 * c[2] - 0.515761000821613793307834423706e12 * c[3] - 0.270160524239892939351722793370e14 * c[4] - 0.294720571898065024747333956403e13 * c[5] + 0.115736768584370135218278044680e16 * c[6], 0, 0.287900737864343800074680648652e13 * c[2] - 0.326287502912922973417971401806e14 * c[3] - 0.999655339806749305814863363375e13 * c[4] + 0.135433305437018395951797688470e16 * c[5] - 0.163743544660345536292474618921e16 * c[6] - 0.104793069547669684329127474492e18 * c[7] + 0.159944854369079888930378138140e12 * c[1], 0, 0.535342300477523329629301376979e18 * c[7] + 0.176274977931156223928802160847e13 * c[1] - 0.673049915737141945909971886870e13 * c[2] - 0.113216610825783520186998842399e15 * c[3] + 0.113577173280642703372307755909e16 * c[4] - 0.152157355950575304200361501567e16 * c[5] - 0.478201965131239352569035025621e17 * c[6], 0, -0.113100220933637517384332594633e19 * c[7] + 0.521805984672209905779059632864e13 * c[1] - 0.720092258847649669975102293352e14 * c[2] + 0.305256501033242794880749885225e15 * c[3] + 0.135800007510942627979000269453e16 * c[4] - 0.273439381117854795875871724111e17 * c[5] + 0.210627768421914536782576089395e18 * c[6], 0, 0.846191494652486020106185791340e18 * c[7] + 0.169910464728964989519777397653e13 * c[1] - 0.968489648955100440262731166622e14 * c[2] + 0.128452311335097532076951712626e16 * c[3] - 0.983781590780707289319511132411e16 * c[4] + 0.539040949352641429251493794054e17 * c[5] - 0.233390713456353599254261431190e18 * c[6], 0, -0.110652491050091159774859832448e14 * c[1] + 0.132782989260109391729831798937e15 * c[2] - 0.896285177505738394176364642825e15 * c[3] + 0.431544715095355523121953346545e16 * c[4] - 0.164318949209385372265666851185e17 * c[5] + 0.525156722523732644291484764796e17 * c[6] - 0.146470702403005668193981960211e18 * c[7], 0])

    return [countpositiveroots(x) for x in coeffs]


def countzeros_in_s_at_alpha(coeffs: np.ndarray, alpha: np.ndarray
                             ) -> L[L[int]]:
    # alpha can be scalar or 1d array of alpha values
    # coeffs is 8x8=64
    c = np.reshape(coeffs, (8, 8))
    t_alpha = (1. - alpha ** 2.) ** 3. / (1. + alpha ** 3. + 4. * alpha ** 6.)
    legval = np.polynomial.legendre.legval(t_alpha, c, tensor=True)
    return ([countzeros(l) for l in legval.T] if isinstance(legval, np.ndarray)
            else [countzeros(legval)])


# tests:
if __name__ == '__main__':
    import pylab
    q = 0.804 / (10. / 81.)

    def gradonly(s: np.ndarray, coeff: np.ndarray) -> np.ndarray:
        p = s**2
        t_s = 2. * p / (q + p) - 1.
        return np.polynomial.legendre.legval(t_s, coeff)

    testcoeff = [1., 2., 3., 4.5, 6., 7., 7., 5.]
    print(countzeros(testcoeff))
    s = np.linspace(0, 25, 500)
    pylab.plot(s, gradonly(s, testcoeff), label='$f(x)$')
    pylab.plot(s, gradonly(s, np.polynomial.legendre.legder(
        testcoeff)) * 4. * s * q / (s**2 + q)**2, label='$f\'(x)$')
    pylab.plot([s[0], s[-1]], [0., 0.], 'k--')
    pylab.legend(loc='best')
    pylab.show()

    yashengbeefcar = np.array(
        [1.0678412675928217, -0.15872242282520396, -0.23727374470038587, 0.0025587527432851254, 0.006748483298726394, 0.0011994362281622633, 0.0015528466146458777, 0.000584892206996479, 0.20323990913830245, 0.11793635648230213, -0.01437960658302686, -0.010305714294261083, 0.016832150866862326, -0.00025773333827270803, 0.0023346167766491333, 0.0003837976998664341, -0.0006952718706718514, 0.00179463855686441, -0.001153807045825489, -0.0007090296813211244, 0.00013702886354574704, 0.006670848599065867, -0.005498112922165805, 0.0014213910238437613, -0.0025656924772691145, 0.002125332357775206, -0.0009641371299507833, 0.0037127861713210433, 0.0012824718527707636, 0.0002262886186270548, -0.006510071882485726, 0.01243327883803539, -0.002170152177993684, 0.002915285520983635, -0.0018638828810102481, -0.0024949505505474645, 0.00041878279077109046, -0.0010099812635462266, 0.0004230264400260503, 0.0024575259185362595, -0.0027233877043555677, 0.002007295399058147, -0.0011896683049514127, 0.0001672905908063297, -0.0002721968500889238, -0.0005869916483960576, 0.0011364858250944854, 0.0015224741795989722, -0.0019776072156133598, 0.001491587478361034, -0.0012883061272796169, -0.0006058496834176058, 0.0002776060240069905, -0.0016226213909532258, 0.0004260858412001439, -0.00036825194324629357, -0.002516160322803815, 0.0019401647142238965, -0.0011756144767584228, 0.00043124117592430525, 3.212943141118693e-06, -0.0002202759704065197, 0.00038071585953508916, -0.0003695503801501715])

    print('')
    print(countzeros_in_s_at_alpha(yashengbeefcar, 0.))
    print(countzeros_in_s_at_alpha(yashengbeefcar, 1.))
    print('')

    alpha_max = 15.
    power = 3
    alpha = np.linspace(0., alpha_max**(1. / power), 20)**power
    print(countzeros_in_s_at_alpha(yashengbeefcar, alpha))
    # print(alpha)
